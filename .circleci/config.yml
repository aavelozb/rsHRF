version: 2.1
jobs:

  test:
    docker:
      - image: circleci/python:3.9
    steps:
      - checkout
      - run:
          name: run unit tests
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip3 install -r requirements.txt
            pytest rsHRF/unit_tests/ -p no:warnings
      - run:
          name: run integration test
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip3 install rshrf
            mkdir ${HOME}/scratch 
            mkdir ${HOME}/scratch/downloads
            wget -c -P ${HOME}/scratch/downloads/ "https://osf.io/xv72t//download"
            tar xf ${HOME}/scratch/downloads/download -C ${HOME}/scratch
            rsHRF --bids_dir ${HOME}/scratch/ds002790/derivatives/fmriprep/ \
              --output_dir ${HOME}/scratch/ds002790 \
              --participant_label 0001 \
              --brainmask \
              --estimation canon2dd \
              --analysis_level participant
          no_output_timeout: 6h

  deploy_pypi:
    docker:
      - image: circleci/python:3.9
    steps:
      - checkout
      - run:
          name: install python dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip3 install twine
      - run:
          name: verify git tag vs. version
          command: |
            python3 -m venv venv
            . venv/bin/activate
            python3 setup.py verify
      - run:
          name: init .pypirc
          command: |
            echo -e "[pypi]" >> ~/.pypirc
            echo -e "username = amogh" >> ~/.pypirc
            echo -e "password = $PYPI_PASSWORD" >> ~/.pypirc
      - run:
          name: create packages
          command: |
            python3 setup.py sdist
            python3 setup.py bdist_wheel
      - run:
          name: upload to pypi
          command: |
            . venv/bin/activate
            twine upload dist/*

  docker_build:
    machine:
      image: ubuntu-2204:2022.10.2
    steps:
      - checkout
      - restore_cache:
          keys:
            - my_cache
      - run:
          name: Build Docker image
          command: |
            wget https://raw.githubusercontent.com/bids-apps/maintenance-tools/main/circleci/build_docker.sh
            bash build_docker.sh
      - save_cache:
          key: my_cache
          paths:
            - ~/docker
      - persist_to_workspace:
          root: /home/circleci
          paths:
            - docker/image.tar

  deploy_dockerhub:
    machine:
      image: ubuntu-2204:2022.10.2
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - run: docker load -i /tmp/workspace/docker/image.tar
      - run:
          name: push to dockerhub
          command: |
            wget https://raw.githubusercontent.com/bids-apps/maintenance-tools/main/circleci/push_docker.sh
            bash push_docker.sh

workflows:
  build_and_deploy:
    jobs:
      - test
      - deploy_pypi:
          requires:
            - test
          filters:
            tags:
              only: /.*/
      - docker_build:
          requires:
            - deploy_pypi # docker images pulls rsHRF from pypi
      - deploy_dockerhub:
          context:
            - dockerhub
          requires:
            - docker_build

